{"version":3,"sources":["components/Node.module.css","components/NodeList.module.css","components/Node.js","components/NodeList.js","App.js","index.js"],"names":["module","exports","Node","props","className","classes","node","title","temperature","humidity","distance","NodeList","nodes","map","key","id","App","useState","sensorData","setSensorData","isLoading","setIsLoading","error","setError","fetchSensorDataHandler","useCallback","fetch","response","ok","Error","json","data","console","log","loadedData","push","response2","data2","message","useEffect","interval","setInterval","clearInterval","content","length","Fragment","onClick","ReactDOM","createRoot","document","getElementById","render"],"mappings":";gIACAA,EAAOC,QAAU,CAAC,KAAO,qB,gBCAzBD,EAAOC,QAAU,CAAC,YAAY,8B,2LCcfC,EAXF,SAACC,GACZ,OACE,wBAAIC,UAAWC,IAAQC,MACrB,4BAAKH,EAAMI,OACX,4CAAkBJ,EAAMK,YAAxB,UACA,wCAAcL,EAAMM,SAApB,MACA,iCAAON,EAAMO,SAAb,S,gBCWSC,EAhBE,SAACR,GAChB,OACE,wBAAIC,UAAWC,IAAQ,cACpBF,EAAMS,MAAMC,KAAI,SAACP,GAAD,OACf,kBAAC,EAAD,CACEQ,IAAKR,EAAKS,GACVN,SAAUH,EAAKG,SACfD,YAAaF,EAAKE,YAClBE,SAAUJ,EAAKI,SACfH,MAAOD,EAAKC,a,+yMCoFPS,MA7Ff,WACE,MAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAA0BJ,mBAAS,MAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAEMC,EAAyBC,sBAAW,sBAAC,mGACzCJ,GAAa,GACbE,EAAS,MAFgC,kBAIlBG,MAAM,2FAJY,WAInCC,EAJmC,QAKzBC,GALyB,sBAM/B,IAAIC,MAAM,yBANqB,wBAQtBF,EAASG,OARa,eAQnCC,EARmC,OASvCC,QAAQC,IAAI,SAAUF,IAEhBG,EAAa,IAERC,KAAK,CACdpB,GAAI,EACJN,SAAUsB,EAAKtB,SACfD,YAAauB,EAAKvB,YAClBE,SAAUqB,EAAKrB,SACfH,MAAO,eAlB8B,UAsBfmB,MAAM,0FAtBS,eAsBjCU,EAtBiC,iBAuBnBA,EAAUN,OAvBS,QAuBjCO,EAvBiC,OAwBvCL,QAAQC,IAAI,UAAWI,GAEvBH,EAAWC,KAAK,CACdpB,GAAI,EACJN,SAAU4B,EAAM5B,SAChBD,YAAa6B,EAAM7B,YACnBE,SAAU2B,EAAM3B,SAChBH,MAAO,eAIT2B,EAAWC,KAAK,CACdpB,GAAI,EACJN,SAAUsB,EAAKtB,SAAW4B,EAAM5B,SAChCD,YAAauB,EAAKvB,YAAc6B,EAAM7B,YACtCE,SAAUqB,EAAKrB,SAAW2B,EAAM3B,SAChCH,MAAO,eAGTY,EAAce,GA3CyB,kDA6CvCX,EAAS,KAAMe,SA7CwB,QA+CzCjB,GAAa,GA/C4B,0DAgDxC,IAEHkB,qBAAU,WACRf,MACC,CAACA,IAKJe,qBAAU,WACR,IAAMC,EAAWC,aAAY,WAC3BT,QAAQC,IAAI,kBACZT,MALc,KAQlB,OAAO,kBAAMkB,cAAcF,MACxB,CAAChB,IAEJ,IAAImB,EAAU,+CAWd,OATIzB,EAAW0B,OAAS,IACtBD,EAAU,kBAAC,EAAD,CAAU/B,MAAOM,KAEzBI,IACFqB,EAAU,2BAAIrB,IAEZF,IACFuB,EAAU,0CAGV,kBAAC,IAAME,SAAP,KACE,0DACA,iCACE,4BAAQC,QAAStB,GAAjB,eAEF,iCAAUmB,KCvFHI,IAASC,WAAWC,SAASC,eAAe,SACpDC,OAAO,kBAAC,EAAD,S","file":"static/js/main.82089cbe.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"node\":\"Node_node__1xkY5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"node-list\":\"NodeList_node-list__2RX0u\"};","import React from 'react';\n\nimport classes from './Node.module.css';\n\nconst Node = (props) => {\n  return (\n    <li className={classes.node}>\n      <h2>{props.title}</h2>\n      <h3>Temperature: {props.temperature} Â°C</h3>\n      <p>Humidity: {props.humidity} %</p>\n      <p>pH:{props.distance} cm</p>\n    </li>\n  );\n};\n\nexport default Node;\n","import React from 'react';\n\nimport Node from './Node';\nimport classes from './NodeList.module.css';\n\nconst NodeList = (props) => {\n  return (\n    <ul className={classes['node-list']}>\n      {props.nodes.map((node) => (\n        <Node\n          key={node.id}\n          humidity={node.humidity}\n          temperature={node.temperature}\n          distance={node.distance}\n          title={node.title}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default NodeList;\n","import React, { useState, useEffect, useCallback } from \"react\";\r\n\r\nimport NodeList from \"./components/NodeList\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  const [sensorData, setSensorData] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const fetchSensorDataHandler = useCallback(async () => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    try {\r\n      var response = await fetch(\"https://fir-esp8266-f80a8-default-rtdb.asia-southeast1.firebasedatabase.app/master.json\");\r\n      if (!response.ok) {\r\n        throw new Error(\"Something went wrong!\");\r\n      }\r\n      var data = await response.json();\r\n      console.log(\"data= \", data);\r\n\r\n      const loadedData = [];\r\n\r\n      loadedData.push({\r\n        id: 1,\r\n        humidity: data.humidity,\r\n        temperature: data.temperature,\r\n        distance: data.distance,\r\n        title: \"Node No. 1\",\r\n      });\r\n\r\n      // add data for second node as well\r\n      const response2 = await fetch(\"https://fir-esp8266-f80a8-default-rtdb.asia-southeast1.firebasedatabase.app/slave.json\");\r\n      const data2 = await response2.json();\r\n      console.log(\"data2= \", data2);\r\n\r\n      loadedData.push({\r\n        id: 2,\r\n        humidity: data2.humidity,\r\n        temperature: data2.temperature,\r\n        distance: data2.distance,\r\n        title: \"Node No. 2\",\r\n      });\r\n\r\n      // show difference as well\r\n      loadedData.push({\r\n        id: 3,\r\n        humidity: data.humidity - data2.humidity,\r\n        temperature: data.temperature - data2.temperature,\r\n        distance: data.distance - data2.distance,\r\n        title: \"Difference\",\r\n      })\r\n\r\n      setSensorData(loadedData);\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchSensorDataHandler();\r\n  }, [fetchSensorDataHandler]);\r\n\r\n\r\n  const MINUTE_MS = 10000;\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      console.log('Logs every 10s');\r\n      fetchSensorDataHandler();\r\n    }, MINUTE_MS);\r\n\r\n  return () => clearInterval(interval); // This represents the unmount function, in which you need to clear your interval to prevent memory leaks.\r\n  }, [fetchSensorDataHandler])\r\n\r\n  let content = <p>Found no data :(</p>;\r\n\r\n  if (sensorData.length > 0)\r\n    content = <NodeList nodes={sensorData} />;\r\n\r\n  if (error)\r\n    content = <p>{error}</p>;\r\n\r\n  if (isLoading)\r\n    content = <p>Loading...</p>;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <h1>WATER POLLUTION MONITORING</h1>\r\n      <section>\r\n        <button onClick={fetchSensorDataHandler}>Fetch data</button>\r\n      </section>\r\n      <section>{content}</section>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}